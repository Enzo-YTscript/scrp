
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Toy Simulator Halloween ðŸŽƒ",
   LoadingTitle = "SUBSCRIBE ENZO-YT",
   LoadingSubtitle = "by ENZO-YT",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil,
      FileName = "Enzo-YT Script"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Toy Simulator Halloween ðŸŽƒ",
      Subtitle = "Key System",
      Note = "Key In Description",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"https://pastebin.com/raw/iJCXgQGb"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

-- Anti Afk
local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   wait(1)
   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)

local MainTab = Window:CreateTab("HOME", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Main")

local player = game.Players.LocalPlayer
local isAutoFarming = false

local function collectCoin(target)
    local targetPosition = target.PrimaryPart.Position
    local playerPosition = player.Character.HumanoidRootPart.Position
    local distance = (targetPosition - playerPosition).Magnitude

    if distance <= 1000 then -- Jarak maksimum untuk mengambil koin
        player.Character:SetPrimaryPartCFrame(target.PrimaryPart.CFrame * CFrame.new(0, 0, -3)) -- Teleportasi ke koin
        wait(0.5) -- Tunggu sejenak untuk memastikan karakter telah sampai ke koin
        target:Destroy() -- Menghapus koin dari permainan (opsional, tergantung pada game Anda)
        player.Character:SetPrimaryPartCFrame(playerStartCFrame) -- Teleportasi kembali ke posisi awal
    end
end

local Toggle = MainTab:CreateToggle({
    Name = "Auto Farm Coins",
    Current = false,
    Flag = "Toggle1",
    Callback = function(v)
        isAutoFarming = v
        while isAutoFarming do
            local target = nil
            local maxdistance = math.huge
            for i, v in pairs(workspace.Misc.Items:GetChildren()) do
                if not v:FindFirstChild("ClickDetector") then continue end
                local dist = (v.PrimaryPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
                if dist > maxdistance then continue end

                target = v
                maxdistance = dist
            end
            if target then
                fireclickdetector(target.ClickDetector)
                game:GetService("ReplicatedStorage").Remotes.Hit:FireServer()
            else
                print("Tidak ada objek dengan ClickDetector di dekat Anda")
            end
            wait(00000000000000000.1) -- Tunggu 1 detik sebelum mencoba lagi
        end
    end,
})

-- Toggle untuk mengaktifkan/menonaktifkan auto collect
local autoCollectToggle = MainTab:CreateToggle({
    Name = "Auto Collect",
    CurrentValue = false,
    Callback = function(Value)
getgenv().collect = Value

while true do
    if getgenv().collect then
        local player = game.Players.LocalPlayer
        local humanoidRootPart = player.Character:WaitForChild("HumanoidRootPart")
        
        for _, Drops in ipairs(game.Workspace.Misc.Drops:GetChildren()) do
            if Drops:IsA("BasePart") then
                Drops.CFrame = CFrame.new(humanoidRootPart.Position)
            end
        end
        end
    
    wait(0.1)
end
end,
})


local Toggle = MainTab:CreateToggle({
    Name = "Auto Collect Gift",
    Currentv = false,
    Flag = "Toggle1",
    Callback = function(v)
        for i = 1, 15 do
            local args = {[1] = i}
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Rewards"):FireServer(unpack(args))
            wait(000000000000000.1)
        end
    end,
})


local AutoStartArenaEnabled = false

local Toggle = MainTab:CreateToggle({
    Name = "Auto Start Arena",
    Current = false,
    Flag = "ToggleAutoStartArena",
    Callback = function(value)
        AutoStartArenaEnabled = value
        if AutoStartArenaEnabled then
            while AutoStartArenaEnabled do
                wait(3) -- Tunggu selama 3 detik sebelum memulai Arena
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Start"):FireServer()
            end
        end
    end,
})

local MainSection = MainTab:CreateSection("Misc")
-- inf jump
local Button = MainTab:CreateButton({
   Name = "Infinite Jump",
   Callback = function()
   -- The function that takes place when the button is pressed
_G.infinjump = not _G.infinjump

if _G.infinJumpStarted == nil then
	--Ensures this only runs once to save resources
	_G.infinJumpStarted = true
	
	--Notifies readiness
	game.StarterGui:SetCore("SendNotification", {Title="Youtube Hub"; Text="Infinite Jump Activated!"; Duration=5;})

	--The actual infinite jump
	local plr = game:GetService('Players').LocalPlayer
	local m = plr:GetMouse()
	m.KeyDown:connect(function(k)
		if _G.infinjump then
			if k:byte() == 32 then
			humanoid = game:GetService'Players'.LocalPlayer.Character:FindFirstChildOfClass('Humanoid')
			humanoid:ChangeState('Jumping')
			wait()
			humanoid:ChangeState('Seated')
			end
		end
	end)
end
   end,
})

--- speed
local Slider = MainTab:CreateSlider({
   Name = "Walk Speed",
   Range = {0, 300},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
          game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})

-- Fungsi untuk mendapatkan daftar area berdasarkan dunia (Earth atau Cyberverse)
local HatchRemote = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("OpenCrate")

local function autohatch(world, area, tier, tripleHatch)
    local args = {
        [1] = world,
        [2] = area,
        [3] = "tier_" .. tier,
        [4] = tripleHatch
    }
    HatchRemote:FireServer(unpack(args))
end

local function startAutoHatch()
    local selectedWorld = getgenv().selectedWorld
    local selectedArea = getgenv().selectedArea
    local selectedTier = getgenv().selectedTier
    local tripleHatch = getgenv().tripleHatch

    if selectedWorld == "Earth" then
        autohatch("Earth", selectedArea, selectedTier, tripleHatch)
    elseif selectedWorld == "Cyberverse" then
        autohatch("Cyberverse", selectedArea, selectedTier, tripleHatch)
    end
end

local EggTab = Window:CreateTab("ðŸ¥š EGG", nil) -- Title, Image
local EggSection = EggTab:CreateSection("EGG")

local ManualAreasCyberverse = {"Cyber Town", "Robo Road", "Cyber Adventure", "Robo Expedition", "Cyber Kingdom", "Robo Life", "Cyber Expedition",  "Robo Forest", "Robo Land", "The Second Portal",}

local ManualAreasEarth = {"Town", "Frosty Kingdom", "Desert Adventure", "Jungle Expedition", "Dinosaur Kingdom", "Farm Life", "Mountain Expedition", "Fantasy Forest", "Aqua Land", "The Portal"}

local selectedCyberverseArea = nil
local selectedEarthArea = nil

local EarthAreaDropdown = EggTab:CreateDropdown({
    Name = "Select Area Earth",
    Options = ManualAreasEarth,
    CurrentOption = {""},
    Callback = function(Option)
        getgenv().selectedWorld = "Earth"
        getgenv().selectedArea = Option[1]
        if getgenv().AutoHatchEgg then
            startAutoHatch()
        end
    end
})

local CyberverseAreaDropdown = EggTab:CreateDropdown({
    Name = "Select Area Cyberverse",
    Options = ManualAreasCyberverse,
    CurrentOption = {""},
    Callback = function(Option)
        getgenv().selectedWorld = "Cyberverse"
        getgenv().selectedArea = Option[1]
        if getgenv().AutoHatchEgg then
            startAutoHatch()
        end
    end
})

local HatchTypeDropdown = EggTab:CreateDropdown({
    Name = "Select Hatch Type",
    Options = {"1 Hatch", "3 Hatch"},
    CurrentOption = {""},
    Callback = function(Option)
        local hatchOptions = {
            ["1 Hatch"] = false,
            ["3 Hatch"] = true
        }

        local tripleHatch = hatchOptions[Option[1]]
        getgenv().tripleHatch = tripleHatch

        if getgenv().AutoHatchEgg then
            startAutoHatch()
        end
    end
})

local TierDropdown = EggTab:CreateDropdown({
    Name = "Select Tier",
    Options = {"Tier_1", "Tier_2", "Tier_3", "Tier_4"},
    CurrentOption = {""},
    Callback = function(Option)
        local tierOptions = {
            ["Tier_1"] = 1,
            ["Tier_2"] = 2,
            ["Tier_3"] = 3,
            ["Tier_4"] = 4
        }

        getgenv().selectedTier = tierOptions[Option[1]] or 1
        if getgenv().AutoHatchEgg then
            autohatch()
        end
    end
})

local isAutoHatching = false

local function startAutoHatch()
    isAutoHatching = true
    while isAutoHatching do
        local selectedWorld = getgenv().selectedWorld
        local selectedArea = getgenv().selectedArea
        local selectedTier = getgenv().selectedTier
        local tripleHatch = getgenv().tripleHatch

        if selectedWorld == "Earth" then
            autohatch("Earth", selectedArea, selectedTier, tripleHatch)
        elseif selectedWorld == "Cyberverse" then
            autohatch("Cyberverse", selectedArea, selectedTier, tripleHatch)
        end

        wait(1) -- Tunggu 2 detik sebelum menjalankan lagi (sesuaikan dengan kebutuhan)
    end
end

local AutoHatchToggle = EggTab:CreateToggle({
    Name = "Auto Hatch Egg",
    CurrentValue = false,
    Callback = function(Value)
        getgenv().AutoHatchEgg = Value
        if Value then
            startAutoHatch()
        else
            isAutoHatching = false -- Mematikan auto hatch
        end
    end
})

local TeleTab = Window:CreateTab("Teleport", nil) -- Title, Image
local TeleSection = TeleTab:CreateSection("Teleport", "note : Need Teleport Gempass")

-- Membuat dropdown Realm
local RealmDropdown = TeleTab:CreateDropdown({
    Name = "Select Realm",
    Options = {"Earth", "Cyberverse"},
    CurrentOption = {""},
    Callback = function(Option)
        getgenv().selectedRealm = Option[1]
    end,
})

-- Membuat dropdown Area untuk Earth
local EarthAreaDropdown = TeleTab:CreateDropdown({
    Name = "Select Area Earth",
    Options = {"Town", "Frosty Kingdom", "Desert Adventure", "Jungle Expedition", "Pirate Cove", "Cerberus Realm",
    "Dinosaur Kingdom", "Farm Life", "Mountain Expedition", "Fantasy Forest", "Aqua Land", "Hydra Room", "The Portal"}, -- Ganti dengan daftar Area untuk Earth
    CurrentOption = {""},
    Callback = function(Option)
        if getgenv().selectedRealm == "Earth" then
            getgenv().selectedAreaEarth = Option[1]
        end
    end,
})

-- Membuat dropdown Area untuk CyberTown
local CyberTownAreaDropdown = TeleTab:CreateDropdown({
    Name = "Select Area CyberTown",
    Options = {"Cyber Town", "Robo Road", "Cyber Adventure", "Robo Expedition", "Cyborg Cerberus Room", "Cyber Kingdom",
    "Robo Life", "Cyber Expedition", "Robo Forest", "Robo Land", "Robo Hydra Room", "The Second Portal",}, -- Ganti dengan daftar Area untuk CyberTown
    CurrentOption = {""},
    Callback = function(Option)
        if getgenv().selectedRealm == "Cyberverse" then
            getgenv().selectedAreaCyberTown = Option[1]
        end
    end,
})

-- Membuat tombol Teleport
local TeleportButton = TeleTab:CreateButton({
    Name = "Teleport",
    Callback = function()
        if getgenv().selectedRealm and ((getgenv().selectedRealm == "Earth" and getgenv().selectedAreaEarth) or (getgenv().selectedRealm == "Cyberverse" and getgenv().selectedAreaCyberTown)) then
            local selectedArea = getgenv().selectedRealm == "Earth" and getgenv().selectedAreaEarth or getgenv().selectedAreaCyberTown
            local args = {
                [1] = getgenv().selectedRealm,
                [2] = selectedArea
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Teleport"):FireServer(unpack(args))
        else
            warn("Pilih Realm dan Area terlebih dahulu.")
        end
    end,
})

local F2PTab = Window:CreateTab("F2P", nil) -- Title, Image
local F2PSection = F2PTab:CreateSection("F2P")

-- Membuat tombol untuk memicu aksi pertama
local Booster1Button = F2PTab:CreateButton({
    Name = "DropsBooster",
    Callback = function()
        local args = {[1] = "Booster", [2] = "DropsBooster"}
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("F2PStore"):FireServer(unpack(args))
    end,
})

-- Membuat tombol untuk memicu aksi kedua
local Booster2Button = F2PTab:CreateButton({
    Name = "PowerBooster",
    Callback = function()
        local args = {[1] = "Booster", [2] = "PowerBooster"}
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("F2PStore"):FireServer(unpack(args))
    end,
})

-- Membuat tombol untuk memicu aksi ketiga
local Booster3Button = F2PTab:CreateButton({
    Name = "MegaLuckBooster",
    Callback = function()
        local args = {[1] = "Booster", [2] = "MegaLuckBooster"}
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("F2PStore"):FireServer(unpack(args))
    end,
})

-- Membuat tombol untuk memicu aksi keempat
local Booster4Button = F2PTab:CreateButton({
    Name = "LuckBooster",
    Callback = function()
        local args = {[1] = "Booster", [2] = "LuckBooster"}
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("F2PStore"):FireServer(unpack(args))
    end,
})


local function autohatch(world, area, tier, tripleHatch)
    local args = {
        [1] = world,
        [2] = area,
        [3] = "tier_" .. tier,
        [4] = tripleHatch
    }
    HatchRemote:FireServer(unpack(args))
end

local function startAutoHatch()
    local selectedWorld = getgenv().selectedWorld
    local selectedArea = getgenv().selectedArea
    local selectedTier = getgenv().selectedTier
    local tripleHatch = getgenv().tripleHatch

    if selectedWorld == "Halloween Event" then
        autohatch("Halloween Event", selectedArea, selectedTier, tripleHatch)    
    end
end

local EVETab = Window:CreateTab("HALLOWEN", nil) -- Title, Image
local EVESection = EVETab:CreateSection("HALLOWEN")

local ManualAreasHalloweenEvent = {"Hallow Town", "Hallow Kingdom", "Hallow Adventure", "Hallow Expedition",  "Hallow Cove",}

local selectedHalloweenEventArea = nil

local HalloweenEventAreaDropdown = EVETab:CreateDropdown({
    Name = "Select Area Halloween Event",
    Options = ManualAreasHalloweenEvent,
    CurrentOption = {""},
    Callback = function(Option)
        getgenv().selectedWorld = "Halloween Event"
        getgenv().selectedArea = Option[1]
        if getgenv().AutoHatchEgg then
            startAutoHatch()
        end
    end
})


local HatchTypeDropdown = EVETab:CreateDropdown({
    Name = "Select Hatch Type",
    Options = {"1 Hatch", "3 Hatch"},
    CurrentOption = {""},
    Callback = function(Option)
        local hatchOptions = {
            ["1 Hatch"] = false,
            ["3 Hatch"] = true
        }

        local tripleHatch = hatchOptions[Option[1]]
        getgenv().tripleHatch = tripleHatch

        if getgenv().AutoHatchEgg then
            startAutoHatch()
        end
    end
})

local TierDropdown = EVETab:CreateDropdown({
    Name = "Select Tier",
    Options = {"Tier_1", "Tier_2", "Tier_3", "Tier_4"},
    CurrentOption = {""},
    Callback = function(Option)
        local tierOptions = {
            ["Tier_1"] = 1,
            ["Tier_2"] = 2,
            ["Tier_3"] = 3,
            ["Tier_4"] = 4
        }

        getgenv().selectedTier = tierOptions[Option[1]] or 1
        if getgenv().AutoHatchEgg then
            autohatch()
        end
    end
})

local isAutoHatching = false

local function startAutoHatch()
    isAutoHatching = true
    while isAutoHatching do
        local selectedWorld = getgenv().selectedWorld
        local selectedArea = getgenv().selectedArea
        local selectedTier = getgenv().selectedTier
        local tripleHatch = getgenv().tripleHatch

        if selectedWorld == "Halloween Event" then
            autohatch("Halloween Event", selectedArea, selectedTier, tripleHatch)
        end

        wait(1) -- Tunggu 2 detik sebelum menjalankan lagi (sesuaikan dengan kebutuhan)
    end
end

local AutoHatchToggle = EVETab:CreateToggle({
    Name = "Auto Hatch Egg",
    CurrentValue = false,
    Callback = function(Value)
        getgenv().AutoHatchEgg = Value
        if Value then
            startAutoHatch()
        else
            isAutoHatching = false -- Mematikan auto hatch
        end
    end
})
